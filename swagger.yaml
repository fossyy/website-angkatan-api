swagger: "2.0"

info:
  version: "1.0.0"
  title: Api Website Angkatan

tags:
  - name: index
  - name: mahasiswa
    description: Semua hal berkaitan dengan menu mahasiswa (list, mahasiswa by id...)
  - name: arunglink
    description: Semua hal berkaitan dengan arunglink (list link, link by id, link by category...)
  - name: images

produces:
  - application/json

paths:
  /:
    get:
      tags:
        - index
      summary: Testing
      description: Testing Deskripsi
      responses:
        "200":
          description: Testing Deskripsi Jika Status OK
  /mahasiswa:
    get:
      tags:
        - mahasiswa
      summary: Mengambil List Mahasiswa
      description: Return data list mahasiswa beserta data pagination
      parameters:
        - name: items
          in: query
          description: Berapa item (jumlah mahasiswa) yang akan di-load per halaman; opsional, jika kosong defaultnya 10; Maksimum item per halaman adalah 20
          required: False
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 10
            example: 10
        - name: page
          in: query
          description: Halaman dalam pagination (set by user)
          required: True
          schema:
            type: integer
            minimum: 1
            example: 1
      responses:
        "200":
          description: Berhasil melakukan query; return JSON array
          schema:
            type: object
            properties:
              students:
                type: array
                description: Data mahasiswa yang muncul
                items:
                  properties:
                    id:
                      type: integer
                      description: ID mahasiswa
                      example: 42
                    nama:
                      type: string
                      description: Nama mahasiswa
                      example: Johann Sebastian Bach
                    jurusan:
                      type: string
                      description: Jurusan mahasiswa (Ilmu Komputer/Sistem Informasi)
                      example: Ilmu Komputer
                    ttl:
                      type: string
                      description: Tempat tanggal lahir
                      example: 2001-03-14T17:00:00.000Z
                    sosmed:
                      type: array
                      description: Array berisi data setiap sosmed yang dimiliki mahasiswa
                      items:
                        type: object
                        description: Data per sosmed
                        properties:
                          data:
                            type: string
                            description: Username atau link (sesuai sosmed; misal, linkedin memakai link)
                          type:
                            type: string
                            description: Nama sosmed tersebut
                      example:
                        - data: goldenlamian
                          type: instagram
                        - data: https://linkedin.com/in/vincent....
                          type: linkedin
                    description:
                      type: string
                      description: Deskripsi/bio mahasiswa
                      example: happily drowning in assignments :D
                    message:
                      type: string
                      example: makasih teman2 web dev lainnya, semangat perjuangannya
                    interests:
                      type: array
                      description: Array berisi semua interest mahasiswa
                      items:
                        type: string
                        description: Salah satu interest Mahasiswa
                      example:
                        - "Backend Developemnt"
                        - "Music"
                        - "Kidnapping"
                    avatar:
                      type: string
                      description: Nama image? dari avatar/profile picture mahasiswa
                      example: c813ae6a-dcd2-416d-9907-dQw4w9WgXcQ
              meta:
                type: object
                description: Data mengenai pagination
                properties:
                  total:
                    type: integer
                    description: Jumlah total mahasiswa
                    example: 462
                  totalPages:
                    type: integer
                    description: Jumlah total halaman
                    example: 47
                  items:
                    type: integer
                    description: Jumlah item per halaman (sama dengan yang di parameter query)
                    example: 10
                  page:
                    type: integer
                    description: Halaman sekarang (sama dengan yang di parameter query)
                    example: 4
        "500":
          description: Thrown error jika parameter tidak sesuai atau kesalahan internal
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Terjadi kesalahan internal server"
              error:
                type: string
                example: "Database connection failed"
  /mahasiswa/{id}:
    get:
      tags:
        - mahasiswa
      summary: Mengambil Data Mahasiswa Berdasarkan ID
      description: Return data detail mahasiswa berdasarkan ID yang diberikan
      parameters:
        - name: id
          in: path
          description: ID unik mahasiswa
          required: true
          type: integer
          minimum: 1
          example: 1
      responses:
        "200":
          description: Data mahasiswa berhasil ditemukan
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "Data mahasiswa berhasil ditemukan"
              data:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  nama:
                    type: string
                    example: "Andi Pratama"
                  jurusan:
                    type: string
                    example: "Ilmu Komputer"
                  ttl:
                    type: string
                    description: Tempat tanggal lahir mahasiswa
                    example: "2001-03-15T00:00:00.000Z"
                  sosmed:
                    type: array
                    description: Daftar akun media sosial mahasiswa
                    items:
                      type: object
                      properties:
                        data:
                          type: string
                          description: Username atau link (sesuai sosmed)
                        type:
                          type: string
                          description: Jenis sosmed
                    example:
                      - data: "andi_ig"
                        type: "instagram"
                      - data: "https://linkedin.com/in/andi"
                        type: "linkedin"
                  description:
                    type: string
                    description: Bio/Deskripsi mahasiswa
                    example: "Suka belajar AI."
                  message:
                    type: string
                    description: Pesan pribadi dari mahasiswa
                    example: "Halo semua!"
                  interests:
                    type: array
                    description: Daftar interest mahasiswa
                    items:
                      type: string
                    example:
                      - "AI"
                      - "Coding"
                      - "Gaming"
                  avatar:
                    type: string
                    description: Nama file avatar/profile picture mahasiswa
                    example: "c813ae6a-dcd2-416d-9907-5849deb3bd5d"
        "400":
          description: ID mahasiswa tidak valid
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "ID mahasiswa harus berupa angka yang valid"
        "404":
          description: Mahasiswa dengan ID tersebut tidak ditemukan
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Mahasiswa dengan ID 999 tidak ditemukan"
        "500":
          description: Terjadi kesalahan internal server
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Terjadi kesalahan internal server"
              error:
                type: string
                example: "Database connection failed"
  /mahasiswa/tags:
    get:
      tags:
        - mahasiswa
      summary: Filtering sesuai dengan tags jurusan, interests, dan search mode
      description: Mengembalikan array berisi semua mahasiswa sesuai tags
      parameters:
        - name: tags
          in: query
          description: |
            Tags yang ingin difilter. Bisa berisi jurusan atau interests
            CASE SENSITIVE
          required: True
          schema:
            type: string
            example: "Ilmu Komputer, Cyber Security, Competitive Programming"
        - name: mode
          in: query
          description: |
            Mode pencarian, bisa "and" atau "or". 
            "and" berarti mahasiswa harus memiliki semua tags yang diberikan,
            "or" berarti mahasiswa harus memiliki minimal salah satu tags yang diberikan.
            Note: Jurusan selalu dalam mode "or"
            default: "and"
          required: false
          schema:
            type: string
            enum:
              - and
              - or
            example: and
        - name: items
          in: query
          description: Berapa item (jumlah mahasiswa) yang akan di-load per halaman; opsional, jika kosong defaultnya 10; Maksimum item per halaman adalah 20
          required: False
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 10
            example: 10
        - name: page
          in: query
          description: Halaman dalam pagination (set by user)
          required: True
          schema:
            type: integer
            minimum: 1
            example: 1
      responses:
        "200":
          description: Data mahasiswa berhasil ditemukan
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "Data mahasiswa berhasil ditemukan"
              students:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    nama:
                      type: string
                      example: "Andi Pratama"
                    jurusan:
                      type: string
                      example: "Ilmu Komputer"
                    ttl:
                      type: string
                      description: Tempat tanggal lahir mahasiswa
                      example: "2001-03-15T00:00:00.000Z"
                    sosmed:
                      type: array
                      description: Daftar akun media sosial mahasiswa
                      items:
                        type: object
                        properties:
                          data:
                            type: string
                            description: Username atau link (sesuai sosmed)
                          type:
                            type: string
                            description: Jenis sosmed
                      example:
                        - data: "andi_ig"
                          type: "instagram"
                        - data: "https://linkedin.com/in/andi"
                          type: "linkedin"
                    description:
                      type: string
                      description: Bio/Deskripsi mahasiswa
                      example: "Suka belajar AI."
                    message:
                      type: string
                      description: Pesan pribadi dari mahasiswa
                      example: "Halo semua!"
                    interests:
                      type: array
                      description: Daftar interest mahasiswa
                      items:
                        type: string
                      example:
                        - "AI"
                        - "Coding"
                        - "Gaming"
                    avatar:
                      type: string
                      description: Nama file avatar/profile picture mahasiswa
                      example: "c813ae6a-dcd2-416d-9907-5849deb3bd5d"
              meta:
                type: object
                description: Data mengenai pagination
                properties:
                  total:
                    type: integer
                    description: Jumlah total mahasiswa
                    example: 462
                  totalPages:
                    type: integer
                    description: Jumlah total halaman
                    example: 47
                  items:
                    type: integer
                    description: Jumlah item per halaman (sama dengan yang di parameter query)
                    example: 10
                  page:
                    type: integer
                    description: Halaman sekarang (sama dengan yang di parameter query)
                    example: 4
        "400":
          description: Bentuk query tidak valid
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Query tags malformed"
        "404":
          description: Tidak ada mahasiswa dengan tags tersebut
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Tidak ada mahasiswa dengan tags tersebut"
        "500":
          description: Terjadi kesalahan internal server
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Terjadi kesalahan internal server"
              error:
                type: string
                example: "Database connection failed"
  /arunglink:
    get:
      tags:
        - arunglink
      summary: Mendapatkan semua link
      description: Mengembalikan array berisi semua link yang telah diupload
      responses:
        "200":
          description: Berhasil mengambil semua link
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: array
                items:
                  type: object
                  properties:
                    slug:
                      type: string
                      example: "portal-akademik-ui"
                    title:
                      type: string
                      example: "Portal Akademik UI"
                    category:
                      type: string
                      enum: [academic, administration, organization, event]
                      example: "academic"
                    link:
                      type: string
                      format: uri
                      example: "https://academic.ui.ac.id"
                    status:
                      type: string
                      enum: [new, on, none]
                      example: "none"
                    uploaded_at:
                      type: string
                      format: date-time
                      example: "2025-01-15T10:30:00.000Z"
        "500":
          description: Terjadi kesalahan internal server
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Failed to fetch arunglink data"

  /arunglink/{slug}:
    get:
      tags:
        - arunglink
      summary: Mendapatkan link berdasarkan slug
      description: Mengembalikan detail link berdasarkan slug unik
      parameters:
        - name: slug
          in: path
          description: Slug unik dari link (bisa dibuat manual atau otomatis)
          required: true
          type: string
          example: "portal-akademik-ui"
      responses:
        "200":
          description: Link berhasil ditemukan
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: object
                properties:
                  slug:
                    type: string
                    example: "portal-akademik-ui"
                  title:
                    type: string
                    example: "Portal Akademik UI"
                  category:
                    type: string
                    enum: [academic, administration, organization, event]
                    example: "academic"
                  link:
                    type: string
                    format: uri
                    example: "https://academic.ui.ac.id"
                  status:
                    type: string
                    enum: [new, on, none]
                    example: "none"
                  uploaded_at:
                    type: string
                    format: date-time
                    example: "2025-01-15T10:30:00.000Z"
        "404":
          description: Link tidak ditemukan
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Arunglink not found"
        "500":
          description: Terjadi kesalahan internal server
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Failed to fetch arunglink data"

  /arunglink/filter:
    get:
      tags:
        - arunglink
      summary: Filter arunglink dengan berbagai kriteria
      description: Mengembalikan array link berdasarkan filter yang diberikan (category, tanggal, dan keyword). Semua parameter opsional dan bisa dikombinasikan.
      parameters:
        - name: category
          in: query
          description: Filter berdasarkan kategori (academic, administration, organization, event)
          required: false
          type: string
          enum: [academic, administration, organization, event]
          example: "academic"
        - name: from
          in: query
          description: Filter tanggal mulai (format YYYY-MM-DD)
          required: false
          type: string
          format: date
          example: "2025-01-10"
        - name: to
          in: query
          description: Filter tanggal akhir (format YYYY-MM-DD)
          required: false
          type: string
          format: date
          example: "2025-02-10"
        - name: search
          in: query
          description: Cari keyword di title (case-insensitive)
          required: false
          type: string
          example: "pmb"
      responses:
        "200":
          description: Berhasil mengambil link berdasarkan filter
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              filters:
                type: object
                description: Filter yang digunakan
                properties:
                  category:
                    type: string
                    example: "academic"
                  from:
                    type: string
                    example: "2025-01-10"
                  to:
                    type: string
                    example: "2025-02-10"
                  search:
                    type: string
                    example: "pmb"
              count:
                type: integer
                description: Jumlah hasil yang ditemukan
                example: 3
              data:
                type: array
                items:
                  type: object
                  properties:
                    slug:
                      type: string
                      example: "pmb-fasilkom-ui"
                    title:
                      type: string
                      example: "PMB Fasilkom UI"
                    category:
                      type: string
                      example: "academic"
                    link:
                      type: string
                      format: uri
                      example: "https://pmb.cs.ui.ac.id"
                    status:
                      type: string
                      enum: [new, on, none]
                      example: "new"
                    uploaded_at:
                      type: string
                      format: date-time
                      example: "2025-01-15T10:30:00.000Z"
        "500":
          description: Terjadi kesalahan internal server
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Failed to filter arunglink data"
              error:
                type: string
                example: "Database error"
  /gallery:
    get:
      tags:
        - images
      summary: Mendapatkan daftar semua gambar
      description: Mengembalikan array berisi semua gambar yang telah diupload
      responses:
        "200":
          description: Berhasil mengambil semua gambar
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: "bahlil"
                    type:
                      type: string
                      example: "jpg"
                    link:
                      type: string
                      format: uri
                      example: "https://cdn.s3.filekeeper.my.id/angkatan/gallery/bahlil.jpg"
                    uploaded_at:
                      type: string
                      format: date-time
                      example: "2025-10-23T06:51:03.184Z"
        "500":
          description: Terjadi kesalahan internal server
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Terjadi kesalahan internal server"
              error:
                type: string
                example: "Database connection failed"
  /ai/generate:
    post:
      tags:
        - AI
      summary: Generate konten AI
      description: Menghasilkan teks atau konten AI berdasarkan prompt yang dikirim sebagai plain text di body.
      consumes:
        - text/plain
      produces:
        - application/json
      parameters:
        - in: body
          name: prompt
          required: true
          description: Prompt yang dikirim dalam bentuk plain text
          schema:
            type: string
            example: "Jelaskan Ilmu Komputer Universitas Indonesia"
      responses:
        "200":
          description: Berhasil generate konten
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: object
                properties:
                  response:
                    type: string
                    example: "Ilmu Komputer Universitas Indonesia adalah bidang studi yang berfokus pada pengembangan teknologi informasi."
        "400":
          description: Permintaan tidak valid
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: "Prompt harus diisi"
        "500":
          description: Terjadi kesalahan internal server
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: "Internal server error"
  /mahasiswa/message:
    post:
      tags:
        - Message
      summary: Kirim pesan untuk mahasiswa
      description: Menambahkan pesan baru yang dikaitkan dengan mahasiswa tertentu.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          description: Data pesan yang akan dikirim
          schema:
            type: object
            required:
              - mahasiswa_id
              - content
            properties:
              mahasiswa_id:
                type: integer
                example: 2
              content:
                type: string
                example: "Selamat datang di Arung 2025!"
      responses:
        "201":
          description: Pesan berhasil dibuat
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: object
                properties:
                  id:
                    type: integer
                    example: 10
                  mahasiswa_id:
                    type: integer
                    example: 2
                  content:
                    type: string
                    example: "Selamat datang di Arung 2025!"
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-10-26T13:45:00.512Z"
        "400":
          description: Permintaan tidak valid
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: "mahasiswa_id dan content wajib diisi"
        "500":
          description: Terjadi kesalahan internal server
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: "Internal server error"
