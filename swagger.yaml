swagger: "2.0"

info:
  version: "1.0.0"
  title: Api Website Angkatan

tags:
  - name: index
  - name: mahasiswa
    description: Semua hal berkaitan dengan menu mahasiswa (list, mahasiswa by id...)

produces:
  - application/json

paths:
  /:
    get:
      tags:
        - index
      summary: Testing
      description: Testing Deskripsi
      responses:
        "200":
          description: Testing Deskripsi Jika Status OK
  /mahasiswa:
    get:
      tags:
        - mahasiswa
      summary: Mengambil List Mahasiswa
      description: Return data list mahasiswa beserta data pagination
      parameters:
        - name: items
          in: query
          description: Berapa item (jumlah mahasiswa) yang akan di-load per halaman; opsional, jika kosong defaultnya 10
          required: False
          schema:
            type: integer
            minimum: 1
            default: 10
            example: 10
        - name: page
          in: query
          description: Halaman dalam pagination (set by user)
          required: True
          schema:
            type: integer
            minimum: 1
            example: 1
      responses:
        "200":
          description: Berhasil melakukan query; return JSON array
          schema:
            type: object
            properties:
              students:
                type: array
                description: Data mahasiswa yang muncul
                items:
                  properties:
                    id:
                      type: integer
                      description: ID mahasiswa
                      example: 42
                    nama:
                      type: string
                      description: Nama mahasiswa
                      example: Johann Sebastian Bach
                    jurusan:
                      type: string
                      description: Jurusan mahasiswa (Ilmu Komputer/Sistem Informasi)
                      example: Ilmu Komputer
                    ttl:
                      type: string
                      description: Tempat tanggal lahir
                      example: 2001-03-14T17:00:00.000Z
                    sosmed:
                      type: array
                      description: Array berisi data setiap sosmed yang dimiliki mahasiswa
                      items:
                        type: object
                        description: Data per sosmed
                        properties:
                          data:
                            type: string
                            description: Username atau link (sesuai sosmed; misal, linkedin memakai link)
                          type:
                            type: string
                            description: Nama sosmed tersebut
                      example:
                        - data: goldenlamian
                          type: instagram
                        - data: https://linkedin.com/in/vincent....
                          type: linkedin
                    description:
                      type: string
                      description: Deskripsi/bio mahasiswa
                      example: happily drowning in assignments :D
                    message:
                      type: string
                      example: makasih teman2 web dev lainnya, semangat perjuangannya
                    interests:
                      type: array
                      description: Array berisi semua interest mahasiswa
                      items:
                        type: string
                        description: Salah satu interest Mahasiswa
                      example:
                        - "Backend Developemnt"
                        - "Music"
                        - "Kidnapping"
                    avatar:
                      type: string
                      description: Nama image? dari avatar/profile picture mahasiswa
                      example: c813ae6a-dcd2-416d-9907-dQw4w9WgXcQ
              meta:
                type: object
                description: Data mengenai pagination
                properties:
                  total:
                    type: integer
                    description: Jumlah total mahasiswa
                    example: 462
                  totalPages:
                    type: integer
                    description: Jumlah total halaman
                    example: 47
                  items: 
                    type: integer
                    description: Jumlah item per halaman (sama dengan yang di parameter query)
                    example: 10
                  page:
                    type: integer
                    description: Halaman sekarang (sama dengan yang di parameter query)
                    example: 4
        # Untuk server response lainnya belum dites
        "500":
          description: Thrown error (misal: parameter tidak sesuai) atau kesalahan internal
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Terjadi kesalahan internal server"
              error:
                type: string
                example: "Database connection failed"
  /mahasiswa/{id}:
    get:
      tags:
        - mahasiswa
      summary: Mengambil Data Mahasiswa Berdasarkan ID
      description: Return data detail mahasiswa berdasarkan ID yang diberikan
      parameters:
        - name: id
          in: path
          description: ID unik mahasiswa
          required: true
          type: integer
          minimum: 1
          example: 1
      responses:
        "200":
          description: Data mahasiswa berhasil ditemukan
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "Data mahasiswa berhasil ditemukan"
              data:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  nama:
                    type: string
                    example: "Ahmad Fayyad"
                  nim:
                    type: string
                    example: "2021001"
                  jurusan:
                    type: string
                    example: "Informatika"
                  angkatan:
                    type: integer
                    example: 2021
        "400":
          description: ID mahasiswa tidak valid
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "ID mahasiswa harus berupa angka yang valid"
        "404":
          description: Mahasiswa dengan ID tersebut tidak ditemukan
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Mahasiswa dengan ID 999 tidak ditemukan"
        "500":
          description: Terjadi kesalahan internal server
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Terjadi kesalahan internal server"
              error:
                type: string
                example: "Database connection failed"
